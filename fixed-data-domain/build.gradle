plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "7.14.0"
}

group = 'com.canario'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.r2dbc:r2dbc-postgresql'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}

flyway {

	//TODO make it read properties from the yml file
	//def props = new Properties()
	//file("src/main/resources/application.yml").withInputStream { props.load(it) }

	/*def databaseProps = props.getProperty("spring.r2dbc.datasource")
	def userProps = props.getProperty("spring.r2dbc.username")
	def passwordProps = props.getProperty("spring.r2dbc.password")*/

	//locations = ['src/main/resources/db/migrations']
	locations = ['filesystem:src/main/resources/db/migration']
	driver = 'org.postgresql.Driver'
	url = "jdbc:postgresql://localhost:5432/root"
	user = "root"
	password = "root"
	schemas = ["public"]
	encoding = "UTF-8"
}
